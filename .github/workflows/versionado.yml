name: Versioning

on:
  push:
    branches:
      - main
      - release
      - develop

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necesario para leer todos los tags

      - name: Calcular nueva versión
        id: calc_version
        run: |
          branch=${GITHUB_REF#refs/heads/}
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "Último tag encontrado: $latest_tag"

          IFS='.' read -r MAJOR MINOR PATCH <<< "$latest_tag"

          if [[ "$branch" == "main" ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "$branch" == "release" ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ "$branch" == "develop" ]]; then
            PATCH=$((PATCH + 1))
          else
            echo "Rama no soportada para versionado automático"
            exit 1
          fi

          NEW_TAG="$MAJOR.$MINOR.$PATCH"
          echo "Generando nuevo tag: $NEW_TAG"

          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Crear y pushear nuevo tag
        env:
          TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          git tag ${{ steps.calc_version.outputs.new_tag }}

          git remote set-url origin https://${TOKEN}@github.com/${{ github.repository }}.git
          git push origin ${{ steps.calc_version.outputs.new_tag }}
